@model ezGift.Models.GiftCreate
@using Microsoft.AspNet.Identity;
@{

    int eventId = Int32.Parse(ViewContext.RouteData.Values["id"].ToString());

    ViewBag.Event = eventId;

    var userId = Guid.Parse(User.Identity.GetUserId());
    var service = new ezGift.Services.RegistryEventService(userId);
    var entity = service.GetRegistryEventById(eventId);
    string eventName = entity.RegistryEventTitle;
    ViewBag.EventName = eventName;
}

@{
    ViewBag.Title = "Gift";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.RegistryEventId)

    <div class="form-horizontal">
        <h4>Add a Gift for @ViewBag.EventName Registry</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GiftName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiftName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiftName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiftDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiftDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiftDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = eventId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
